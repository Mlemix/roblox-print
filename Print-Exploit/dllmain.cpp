#include <windows.h>
#include <thread>

enum colours : std::uint8_t
{
    regular,
    info,
    warn,
    error
};

[[noreturn]] auto entry() -> void
{
    // address is rebased to 0 for version-af653eb90d574aa0
    const auto print = reinterpret_cast<void(__fastcall*)(std::uint8_t, const char*, ...)>(reinterpret_cast<std::uintptr_t>(GetModuleHandle(nullptr)) + 0xc2dce0);

    print(colours::regular, "this is white");
    std::this_thread::sleep_for(std::chrono::milliseconds(100));

    print(colours::info, "this is blue");
    std::this_thread::sleep_for(std::chrono::milliseconds(100));

    print(colours::warn, "this is yellow");
    std::this_thread::sleep_for(std::chrono::milliseconds(100));

    print(colours::error, "this is red");
}

auto __stdcall DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved) -> bool
{
    if (ul_reason_for_call == DLL_PROCESS_ATTACH)
        std::thread{ entry }.detach();
    return true;
}
