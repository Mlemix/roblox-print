#include <windows.h>
#include <thread>
#include <iostream>

std::uintptr_t handle = std::bit_cast<std::uintptr_t>(GetModuleHandleA(nullptr));
int(__fastcall* print)(int, const char*, ...) = std::bit_cast<int(__fastcall*)(int, const char*, ...)>(handle + 0x3E9470); // address is rebased to 0 for version-91f017face444efd

enum colours
{
    regular,
    info,
    warn,
    error
};

void main()
{
    print(colours::regular, "this is white");
    print(colours::info, "this is blue");
    print(colours::warn, "this is yellow");
    print(colours::error, "this is red");
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)
{
    if (ul_reason_for_call == DLL_PROCESS_ATTACH)
        std::thread{ main }.detach();
    return TRUE;
}
